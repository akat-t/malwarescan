# coding: utf-8
from mods.api.api_models import Evaluation  # noqa: E501,F401
from mods.api.api_models import EvaluationFile  # noqa: E501,F401
from mods.api.test import BaseTestCase


class TestEvaluationController(BaseTestCase):
    """EvaluationController integration test stubs"""

    def test_evaluation_file_by_sha256(self):
        """Test case for evaluation_file_by_sha256

        Gets an evaluation file with a specified SHA-256 hash.
        """
        response = self.client.open(
            '/v2/eval/file/sha256/{hash}'.format(
                hash='f972f830cb31656b8d390b48a0d3bdac0ff7378332473bd1e75e243fef536f11'),
            method='GET',
            content_type='application/json')
        self.assert200(response,
                       'Response body is : ' + response.data.decode('utf-8'))

    def test_evaluation_get(self):
        """Test case for evaluation_get

        Gets an evaluation with a specified ID.
        """
        response = self.client.open(
            '/v2/eval/{id}'.format(id='ff83f2af-e234-4ef5-9b2b-9b08dd220aca'),
            method='GET',
            content_type='application/json')
        self.assert200(response,
                       'Response body is : ' + response.data.decode('utf-8'))
    '''
    def test_evaluation_submit(self):
        """Test case for evaluation_submit

        Submits a file for evaluation.
        """
        query_string = [('correlationID', 'correlationID_example')]
        data = dict(file=(BytesIO(b'some file data'), 'file.txt'))
        response = self.client.open(
            '/v2/eval',
            method='POST',
            data=data,
            content_type='multipart/form-data',
            query_string=query_string)
        self.assert200(response,
                       'Response body is : ' + response.data.decode('utf-8'))
    '''


if __name__ == '__main__':
    import unittest
    unittest.main()

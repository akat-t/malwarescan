from os import environ as oe

EXTENSIONS = [
    'flask_appfactory.ext.jinja2',
    'flask_celeryext:FlaskCeleryExt',
    'exts.sqlalchemy',
    'exts.uploads',
    'exts.smtp',
]
PACKAGES = [
    'libs',
    'mods.api',
    'mods.ui',
    'mods.admin',
]
# Flask Conf
FLASK_SERVER_NAME = oe.get('FLASK_SERVER_NAME', 'malwarescan.example.com')
FLASK_HOST = oe.get('FLASK_HOST', '0.0.0.0')
FLASK_PORT = oe.get('FLASK_PORT', 8080)
FLASK_DEBUG = oe.get('FLASK_DEBUG', False)
JSONIFY_PRETTYPRINT_REGULAR = True
EXPLAIN_TEMPLATE_LOADING = False
SECRET_KEY = oe.get('SECRET_KEY', 'c147aca13ed027e9e62c35f')
FLASK_ADMIN_FLUID_LAYOUT = True
# Flask-Uploads Conf
UPLOADS_DEFAULT_DEST = '/tmp/uploads/'
# DB Conf
DB_CONF = {
    'type': oe.get('DB_TYPE', 'postgresql'),
    'user': oe.get('DB_USER', 'malwarescan'),
    'pass': oe.get('DB_PASS', 'malwarescan'),
    'name': oe.get('DB_NAME', 'malwarescan_db'),
    'host': oe.get('DB_HOST', '127.0.0.1'),
    'port': oe.get('DB_PORT', '5432'),
}
# SQLAlchemy Conf
SQLALCHEMY_TRACK_MODIFICATIONS = False
SQLALCHEMY_ECHO = False
# PostgreSQL
SQLALCHEMY_DATABASE_URI = '{type}+psycopg2://{user}:{pass}@{host}:{port}/{name}'.format(
    **DB_CONF)
# Celery Conf
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TIMEZONE = oe.get('CELERY_TIMEZONE', 'Europe/Sofia')
CELERY_WORKER_SEND_TASK_EVENTS = oe.get('CELERY_WORKER_SEND_TASK_EVENTS', True)
CELERY_WORKER_CONCURRENCY = oe.get('CELERY_WORKER_CONCURRENCY', 2)
CELERY_WORKER_LOG_FORMAT = ("%(asctime)s | %(levelname)-6s |"
                            " %(process)-6d | %(funcName)-6s | %(message)s")
# RabbitMQ
CELERY_BROKER_URL = oe.get('CELERY_BROKER_URL',
                           'amqp://malwarescan:malwarescan@127.0.0.1:55672//')
# PostgreSQL
CELERY_RESULT_BACKEND = 'db+{type}://{user}:{pass}@{host}:{port}/{name}'.format(
    **DB_CONF)
# CASMA API Conf
CAS_API = {
    'host': oe.get('CAS_HOST', '127.0.0.1:8082'),
    'token': oe.get('CAS_KEY', '63da075f599a4297bb1szxkd96f9ee65e10e'),
    'wait_ms': oe.get('CAS_WAIT', '0'),
}
# Flask-Mail Conf
MAIL_SERVER = oe.get('MAIL_SERVER', 'smtp.google.com')
MAIL_PORT = oe.get('MAIL_PORT', 587)
MAIL_USE_SSL = oe.get('MAIL_USE_SSL', False)
MAIL_USE_TLS = oe.get('MAIL_USE_TLS', False)
MAIL_USERNAME = oe.get('MAIL_USERNAME', '')
MAIL_PASSWORD = oe.get('MAIL_PASSWORD', '')
MAIL_DEFAULT_SENDER = oe.get('MAIL_DEFAULT_SENDER',
                             '"MalwareScan Framework" <malware@example.com>')
ADMINS = oe.get('ADMINS', [
    '"Administrator" <admin@example.com>',
])
# Logging
APP_LOG = {
    'formatters': {
        'unified': {
            'datefmt': '%Y-%m-%d %H:%M:%S',
            'format': '%(asctime)s | %(levelname)-6s | '
                      '%(process)-6d | %(funcName)-6s | '
                      '%(message)s'
        }
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'unified',
            'level': 'INFO',
            'stream': 'ext://sys.stdout'
        }
    },
    'loggers': {
        'root': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True
        }
    },
    'version': 1
}
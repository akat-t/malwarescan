#!/usr/bin/env python
# -*- coding: utf-8 -*-
import json
import ssl
import click
from json.decoder import JSONDecodeError
from websocket import WebSocketException
from websocket import WebSocketConnectionClosedException
from websocket import create_connection
from datetime import datetime as dtime
from .app import create_app

flask_app = create_app()


def websocket_scan_thread(ws):
    from mods.api.tasks import eval_result
    while True:
        msg = ""
        try:
            msg = ws.recv()
            # print(dtime.now(), "[RESPONSE]", type(msg))
            msg = json.loads(msg)
            # print(dtime.now(), "[PARSED]", msg)
            eval_result.apply_async(args=(msg,))
            print(
                dtime.now(),
                "[!] [{server_time}] Result for file with SHA1 Hash: {sha1} | cas id: {id}"
                .format(**msg))
        except (KeyError, JSONDecodeError, WebSocketException,
                WebSocketConnectionClosedException) as e:
            print(dtime.now(), "[ERROR]: %s" % (e))
            # sys.exit(1)
            pass


@click.command(
    context_settings=dict(ignore_unknown_options=True, help_option_names=[]))
def run_wsclient():
    """Websocket listener for evaluation results"""
    CAS_API = flask_app.config['CAS_API']
    secure_prefix = "s"
    token = CAS_API['token']
    print(f"Loading token from app.config... {token}")
    host = CAS_API['host']
    print(f"Loading host from app.config... {host}")
    headers = {'X-API-TOKEN': token}
    # Subscribe to the websocket publisher.
    url = "ws%s://%s/rapi/ws/cas_task" % (secure_prefix, host)
    ws = create_connection(
        url, sslopt={"cert_reqs": ssl.CERT_NONE}, header=headers)
    thread = websocket_scan_thread(ws)
    thread.start()
